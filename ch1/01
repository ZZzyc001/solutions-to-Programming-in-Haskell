import Prelude hiding (product)

-- 1
--   double (douoble 2)
-- = (double 2) + (double 2)
-- = (2 + 2) + (double 2)
-- = 4 + double 2
-- = 4 + (2 + 2)
-- = 4 + 4
-- = 8

-- 2
--   sum [x]
-- = x + sum []
-- = x

-- 3
product :: [Int] -> Int
product []       = 1
product (x : xs) = x * product xs

-- 4
qsort :: Ord a => [a] -> [a]
qsort [] = []
qsort (x : xs) = qsort upper ++ [x] ++ qsort lower
                    where
                        upper = [y | y <- xs, y >  x]
                        lower = [z | z <- xs, z <= x]

-- 5
-- No, we can't.
-- When we using < replace <= , some value which equal
-- to the first value will be not considered
